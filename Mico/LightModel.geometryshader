#version 430 core
layout(triangles) in;
layout(line_strip, max_vertices = 2) out;


// constant values for the whole mesh.
uniform mat4 ModelMatrix;
uniform mat4 ViewMatrix;
uniform mat4 ProjectionMatrix;

out VertexData {
    vec3 normal;
} VertexOut;
 
out vec3 triangle_normal;

void main(){

  vec3 P0 = gl_in[0].gl_Position.xyz;
  vec3 P1 = gl_in[2].gl_Position.xyz;
  vec3 P2 = gl_in[4].gl_Position.xyz;

  vec3 V0 = P1 - P0;
  vec3 V1 = P2 - P0;
  vec3 N = cross(V0, V1);
  
  //N = normalize(N);
  // Center of the triangle
  vec3 P = (P0+P1+P2) / 3.0;

  gl_Position = ProjectionMatrix * ViewMatrix * ModelMatrix * vec4(P + N * 10.0f, 1.0);
  
}